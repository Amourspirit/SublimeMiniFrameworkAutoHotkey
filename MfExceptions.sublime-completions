{
  "scope" : "source.ahk",
  "completions" : [
        { "trigger": "MfException()", "contents": "MfException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfSystemException()", "contents": "MfSystemException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfArgumentException()", "contents": "MfArgumentException(${1:[message}, ${2:paramName|innerException]})" },
        { "trigger": "MfArithmeticException()", "contents": "MfArithmeticException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfArgumentNullException()", "contents": "MfArgumentNullException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfArgumentNullException(paramName)", "contents": "MfArgumentNullException(${1:[paramName}, ${2:message]})" },
        { "trigger": "MfArgumentOutOfRangeException()", "contents": "MfArgumentOutOfRangeException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfArgumentOutOfRangeException(paramName)", "contents": "MfArgumentOutOfRangeException(${1:[paramName}, ${2:message]})" },
        { "trigger": "MfDriveNotFoundException()", "contents": "MfDriveNotFoundException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfDirectoryNotFoundException()", "contents": "MfDirectoryNotFoundException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfFileNotFoundException()", "contents": "MfFileNotFoundException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfFileNotFoundException(message, fileName, innerException)", "contents": "MfFileNotFoundException(${1:[message}, ${2:fileName}, ${3:innerException]})" },
        { "trigger": "MfFormatException()", "contents": "MfFormatException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfInvalidCastException()", "contents": "MfInvalidCastException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfInvalidCastException(message, errorCode)", "contents": "MfInvalidCastException(${1:[message}, ${2:errorCode]})" },
        { "trigger": "MfInvalidOperationException()", "contents": "MfInvalidOperationException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfIOException()", "contents": "MfIOException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfIOException(message, hresult)", "contents": "MfIOException(${1:[message}, ${2:hresult]})" },
        { "trigger": "MfIndexOutOfRangeException()", "contents": "MfIndexOutOfRangeException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfMemberAccessException()", "contents": "MfMemberAccessException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfMissingFieldException()", "contents": "MfMissingFieldException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfMissingFieldException(className, fieldName)", "contents": "MfMissingFieldException(${1:className}, ${2:fieldName})" },
        { "trigger": "MfMissingMemberException()", "contents": "MfMissingMemberException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfMissingMemberException(className, fieldName)", "contents": "MfMissingMemberException(${1:className}, ${2:fieldName})" },
        { "trigger": "MfMissingMethodException()", "contents": "MfMissingMethodException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfMissingMethodException(className, memberName)", "contents": "MfMissingMethodException(${1:className}, ${2:memberName})" },
        { "trigger": "MfNotImplementedException()", "contents": "MfNotImplementedException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfNonMfObjectException(message, innerException)", "contents": "MfNonMfObjectException(${1:message}, ${2:innerException})" },
        { "trigger": "MfNonMfObjectException(paramName, message)", "contents": "MfNonMfObjectException(${1:[paramName}, ${2:message]})" },
        { "trigger": "MfNullReferenceException()", "contents": "MfNullReferenceException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfNotSupportedException()", "contents": "MfNotSupportedException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfOverflowException()", "contents": "MfOverflowException(${1:[message}, ${2:innerException]})" },
        { "trigger": "MfDivideByZeroException()", "contents": "MfDivideByZeroException(${1:[message}, ${2:innerException]})" },

        { "trigger": ".SetProp()", "contents": "SetProp(${1:A_LineFile}, ${2:A_LineNumber}, ${3:A_ThisFunc})" }
  ]
}