{
    "scope": "source.ahk",
	"completions": [
	        { "trigger": "MfString()", "contents": "MfString(${1:[val = Null]})" },
	        { "trigger": "MfString(val, returnAsObj, readonly)", "contents": "MfString(${1:[val = MfString.Empty}, ${2:returnAsObj = false}, ${3:readonly = false]})" },
	        { "trigger": "MfString.Empty", "contents": "MfString.Empty" },
	        { "trigger": "MfString.Equals()", "contents": "MfString.Equals(${1:strA}, ${2:strB})" },
	        { "trigger": "MfString.Concat()", "contents": "MfString.Concat(${1:arg1}, ${2:arg2} [, ${3:arg...}])" },
	        { "trigger": "MfString.Compare(strA, strB)", "contents": "MfString.Compare(${1:strA}, ${2:strB}${3:[, ignoreCase|comparisonType]})" },
	        { "trigger": "MfString.Compare(strA, indexA)", "contents": "MfString.Compare(${1:strA}, ${2:indexA}, ${3:strB}, ${4:indexB}, ${5:length}${6:[, ignoreCase = true]})" },
	        { "trigger": "MfString.Difference()", "contents": "MfString.Difference(${1:strFirst}, ${2:strSecond}${3:[, maxDistance = 5]})" },
	        { "trigger": "MfString.Format()", "contents": "MfString.Format(${1:str}, ${2:arg1} [, ${3:arg...}])" },
	        { "trigger": "MfString.GetValue()", "contents": "MfString.GetValue(${1:str})" },
	        { "trigger": "MfString.IndexOf()", "contents": "MfString.IndexOf(${1:strMain}, ${2:searchChar|strSearch}, [${3:startIndex = 0}, ${4:count}])" },
	        { "trigger": "MfString.IsNullOrEmpty()", "contents": "MfString.IsNullOrEmpty(${1:str})" },
	        { "trigger": "MfString.LastIndexOf()", "contents": "MfString.LastIndexOf(${1:strMain}, ${2:searchChar|strSearch}, [${3:startIndex = 0}, ${4:count}])" },
	        { "trigger": "MfString.PadLeft()", "contents": "MfString.PadLeft(${1:str}, ${2:totalWidth}${3:[, paddingChar = \" \"]})" },
	        { "trigger": "MfString.PadRight()", "contents": "MfString.PadRight(${1:str}, ${2:totalWidth}${3:[, paddingChar = \" \"]})" },
	        { "trigger": "MfString.Reverse()", "contents": "MfString.Reverse(${1:str})" },
	        { "trigger": "MfString.Substring()", "contents": "MfString.Substring(${1:str}, ${2:startIndex = 0} ${3:[, length]})" },
	        { "trigger": ".Append()", "contents": "Append(${1:value})" },
	        { "trigger": ".AppendLine()", "contents": "AppendLine(${1:value})" },
	        { "trigger": ".CutIfLong()", "contents": "CutIfLong(${1:maxLen}${2:[, trailChars = \"...\"]})" },
	        { "trigger": ".Difference()", "contents": "Difference(${1:value}${2:[, maxDistance = 5]})" },
	        { "trigger": ".EndsWith()", "contents": "EndsWith(${1:value}${2:[, comparisonType = MfStringComparison.Instance.OrdinalIgnoreCase]})" },
	        { "trigger": ".Escape()", "contents": "Escape(${1:[EscapeChar = ``]})" },
	        { "trigger": ".EscapeSend()", "contents": "EscapeSend()" },
	        { "trigger": ".IndexOf(strMain, searchChar|strSearch)", "contents": "IndexOf(${1:strMain}, ${2:searchChar|strSearch}, [${3:startIndex = 0}, ${4:count}])" },
	        { "trigger": ".LastIndexOf(strMain, searchChar|strSearch)", "contents": "LastIndexOf(${1:strMain}, ${2:searchChar|strSearch}, [${3:startIndex = 0}, ${4:count}])" },
	        { "trigger": ".PadLeft()", "contents": "PadLeft(${1:totalWidth}${2:[, paddingChar = \" \"]})" },
	        { "trigger": ".PadRight()", "contents": "PadRight(${1:totalWidth}${2:[, paddingChar = \" \"]})" },
	        { "trigger": ".Reverse()", "contents": "Reverse()" },
	        { "trigger": ".Split()", "contents": "Split([${1:separator = \"\"} , ${2:options = MfStringSplitOptions.Instance.None}])" },
	        { "trigger": ".Substring()", "contents": "Substring(${1:startIndex}${2:[, length]})" },
	        { "trigger": ".ToLower()", "contents": "ToLower()" },
	        { "trigger": ".ToUpper()", "contents": "ToUpper()" },
	        { "trigger": ".Trim([trimChars])", "contents": "Trim(${1:[trimChars = \" \"]})" },
	        { "trigger": ".TrimEnd()", "contents": "TrimEnd(${1:[trimChars = \" \"]})" },
	        { "trigger": ".TrimStart()", "contents": "TrimStart(${1:[trimChars = \" \"]})" },
	        { "trigger": ".UnEscape()", "contents": "UnEscape()" },

	        { "trigger": "IsNullOrEmpty()", "contents": "MfString.IsNullOrEmpty(${1:str})" },
	        { "trigger": ".IsNullOrEmpty()", "contents": "IsNullOrEmpty(${1:str})" },
	        { "trigger": "Substring()", "contents": "MfString.Substring(${1:str}, ${2:startIndex = 0} ${3:[, length]})" },
	        { "trigger": ".Substring()", "contents": "Substring(${1:str}, ${2:startIndex = 0} ${3:[, length]})" }
	]           
}